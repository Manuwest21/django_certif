name: Build and Deploy Docker Image to Docker Hub and Azure Container Registry

on:
  push:
    branches:
      - dev7  # Changez en fonction de la branche que vous utilisez pour d√©ployer

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}  # Nom d'utilisateur Docker Hub
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}  # Mot de passe Docker Hub
      AZURE_CONTAINER_REGISTRY: ${{ secrets.AZURE_CONTAINER_REGISTRY }}  # URL de votre ACR, e.g., myregistry.azurecr.io
      AZURE_CONTAINER_NAME: application-django-test
      RESOURCE_GROUP: RG_Devries1
      IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/djangax  # Nom de l'image Docker Hub

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Print secrets for debugging
        run: |
          echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}"
          echo "DOCKER_PASSWORD=${{ secrets.DOCKER_PASSWORD }}"
          echo "AZURE_CONTAINER_REGISTRY=${{ secrets.AZURE_CONTAINER_REGISTRY }}"
          echo "AZURE_CONTAINER_NAME=${{ secrets.AZURE_CONTAINER_NAME }}"
          echo "RESOURCE_GROUP=${{ env.RESOURCE_GROUP }}"
          echo "IMAGE_NAME=${{ env.IMAGE_NAME }}"

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: docker build -t $IMAGE_NAME .

      - name: Push Docker image to Docker Hub
        run: docker push $IMAGE_NAME

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Remove existing Azure Container Instance if exists
        run: |
          az container delete --resource-group $RESOURCE_GROUP --name $AZURE_CONTAINER_NAME --yes || true

      - name: Wait for Azure Container Instance to be deleted
        run: |
          while az container show --resource-group $RESOURCE_GROUP --name $AZURE_CONTAINER_NAME --output none; do
            echo "Waiting for container to be deleted..."
            sleep 10
          done

      - name: Create new Azure Container Instance
        run: |
          az container create \
            --resource-group $RESOURCE_GROUP \
            --name $AZURE_CONTAINER_NAME \
            --image $IMAGE_NAME \
            --cpu 1 \
            --memory 1 \
            --ports 8000 \
            --ip-address public \
            --restart-policy Always

