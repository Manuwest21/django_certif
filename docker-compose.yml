version: '3.8'
networks:
  monitoring:
    driver: bridge
volumes:
  prometheus_data: {}
  grafana-data: {}
services:
  # django:
  #   build:
  #     context: .
  #     dockerfile: dockerfile
  #   container_name: django_app
  #   ports:
  #     - "8001:8000"
  #   networks:
  #     - monitoring
  prometheus:
      image: prom/prometheus:latest
      container_name: prometheus
      restart: unless-stopped
      volumes:
      
        - ./prometheus.yml:/etc/prometheus/prometheus.yml
        - prometheus_data:/prometheus
      command:
        - '--config.file=/etc/prometheus/prometheus.yml'
        - '--storage.tsdb.path=/prometheus'
        - '--web.console.libraries=/etc/prometheus/console_libraries'
        - '--web.console.templates=/etc/prometheus/consoles'
        - '--web.enable-lifecycle'
      ports:
        - 9090:9090
      
      depends_on:
        - app
      networks:
        - monitoring
    

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - '3000:3000'
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_SECURITY_ADMIN_USER: "admin"
      GF_SECURITY_ADMIN_PASSWORD: "newpassword"
    volumes:
      - grafana-data:/var/lib/grafana
    restart: unless-stopped
    networks:
      - monitoring

  app:
      build:
        context: .
        dockerfile: Dockerfile
      
      ports:
        - "8000:8000"
      command: ["python3", "manage.py", "runserver", "0.0.0.0:8000"]
      networks:
       - monitoring
